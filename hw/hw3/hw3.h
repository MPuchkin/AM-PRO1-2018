//
// ƒомашн€€ работа є3
// hw3.h
//
#pragma once

// “очка плоскости
// ѕол€:
//      x, y Ц вещественные координаты точки.
struct point
{
    double x, y;
};


// ¬ычисл€ет основание перпендикул€ра к пр€мой
// ѕараметры:
//     p Ц начало перпендикул€ра,
//     l1, l2 Ц точки пр€мой.
// ¬озращаемое значение:
//     основание перепендикул€ра.
point orth_point(const point &p, const point &l1, const point &l2); 


// ¬ычисл€ет точку пересечени€ двух пр€мых
// ѕараметры:
//     l1_1, l1_2 Ц точки первой пр€мой,
//     l2_1, l2_2 Ц точки второй пр€мой,
//     inter_p Ц точка пересечени€.
// ¬озращаемое значение:
//     существует пересечение,
//     inter_p Ц точка пересечени€.
bool intersection(const point &l1_1, const point &l1_2, const point &l2_1, const point &l2_2, point &inter_p);


// ¬ычисл€ет ортоцетр треугольника
// ѕараметры:
//      a, b, c Ц вершины треугольника.
// ¬озращаемое значение:
//     точка пересечени€ высот.
point ortho_center(const point &a, const point &b, const point& c);